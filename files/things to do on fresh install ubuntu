if we want to install ubuntu on the same disk with windows 10, we choose install alongside windows

if we've already backed things up and have a whole empty disk just for ubuntu only, then we choose erase disk and install ubuntu

after sudo update and sudo upgrade everything, then working with ubuntu-drivers (we have to choose a specific 470 manually because the update and upgrade WILL INSTALL THE NVIDIA DRIVER FOR US and it's 535 or 525 or open source no matter which one, it will break our system, so remember to manually choose 470)

if the PC has NVIDIA graphic card, it's best to choose the lowest, example like 470 (Using NVIDIA driver metapackage from nvidia-driver-470 (proprietary))

DON'T CHOOSE 535 or 525 or open source because it gonna break our system

sudo nala install ubuntu-desktop (actually fix the problem for GOD sake, thank to ChatGPT-4)

use time shift to back our system up if it break



install nala
sudo nala fetch
install driver
sudo nala update 
sudo nala upgrade 
sudo apt install ubuntu-restricted-extras (media files like MPEG4, AVI)
sudo apt-get install tlp tlp-rdw (improve battery life) and sudo tlp start (to start)
gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize' (minimize on click)
sudo apt-get autoclean (auto clean)
sudo apt install gnome-tweak-tool -y (change the look of your desktop with new themes and colors)
sudo nala install flatpak (for more applications)
sudo apt install gnome-software-plugin-flatpak (install flatpak plugin for GNOME software center)
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo (add the Flathun repo that will give you access to all the applications available on Flathub)
remove firefox from snap store and use deb instead
sudo snap remove firefox
 sudo add-apt-repository ppa:mozillateam/ppa
 
 echo '
Package: *
Pin: release o=LP-PPA-mozillateam
Pin-Priority: 1001
' | sudo tee /etc/apt/preferences.d/mozilla-firefox

echo 'Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";' | sudo tee /etc/apt/apt.conf.d/51unattended-upgrades-firefox

sudo apt install firefox

sudo nala install gnome-shell-extension-manager (so you can use to download plugins)
- user themes
- caffeine
- blur my shell
- cpufreq

set wall paper
setting things (dark themes, dock, bla bla)
download apps (
- chrome
- edge
- vscode
- discord
- telegram 
- stacer
- vlc
- timeshift
- video downloader
- monkey type
- sudo nala install gnome-tweaks
- megasync
- only office
- metronome (tempo)
- messenger
- blanket (sounds)

)


 sudo nala install gparted
 sudo nala install preload
 change DNS on IPv4 to 8.8.8.8,8.8.4.4
change firefox about:config (
layers.acceleration.force-enabled
gfx.webrender.all
)

update snap store

sudo ufw enable (enable firewall)

setup on The Odin Project (
https://www.theodinproject.com/guides/installations

(install git)
sudo apt update
sudo apt upgrade
sudo add-apt-repository ppa:git-core/ppa
sudo apt update
sudo apt install git
git --version

(configure git and github)
https://www.theodinproject.com/lessons/foundations-setting-up-git#step-2-configure-git-and-github


(setup git)
git config --global user.name "Your Name"
(set name)
git config --global user.email "yourname@example.com"
(set email)
git config --global init.defaultBranch main
(set default branch)
git config --global color.ui auto
(set color)
git config --global pull.rebase false
(default branch behavior)
git config --get user.name
git config --get user.email
(check information)


(create a SSH key)
ls ~/.ssh/id_ed25519.pub
(If a message appears in the console containing the text “No such file or directory”, then you do not yet have an Ed25519 SSH key, and you will need to create one.)
ssh-keygen -t ed25519 -C <youremail>
(When it prompts you for a location to save the generated key, just push Enter.
Next, it will ask you for a password; enter one if you wish, but it’s not required.)

(link your SSH key to gitHub)
cat ~/.ssh/id_ed25519.pub
(Now you need to copy your public SSH key. To do this, we’re going to use a command called cat to read the file to the console. (Note that the .pub file extension is important in this case.)

Highlight and copy the output, which starts with ssh-ed25519 and ends with your email address.

Now, go back to GitHub in your browser window and paste the key you copied into the key field. Keep the key type as Authentication Key and then, click Add SSH key. You’re done! You’ve successfully added your SSH key!

TESTING YOUR KEY
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/testing-your-ssh-connection

ssh -T git@github.com

You may see a warning like this:

> The authenticity of host 'github.com (IP ADDRESS)' can't be established.
> ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
> Are you sure you want to continue connecting (yes/no)?

Verify that the fingerprint in the message you see matches GitHub's public key fingerprint. If it does, then type yes:

> Hi USERNAME! You've successfully authenticated, but GitHub does not
> provide shell access.

INSTALLING NODEJS

sudo nala install curl
sudo apt update && sudo apt upgrade
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash

download and install nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

You can verify nvm is installed by running the command:

command -v nvm


installing node
nvm install --lts

setting node version
nvm use --lts


)


)

sudo nala install mpv 
(to display small webcam screen)
to run: (with 192x108 in the window size)
mpv av://v4l2:/dev/video0 --profile=low-latency --untimed --no-osc --no-osd-bar --geometry=192x108-0-0


sudo nala install okular 
(edit pdf)

snap install pomatez
(podomoro timer)


















